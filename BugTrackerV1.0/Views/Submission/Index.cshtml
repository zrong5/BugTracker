@model BugTracker.Models.SubmissionModels.SubmissionIndexModel
@using Microsoft.AspNetCore.Authorization
@{
    <text>
        <script>
            var data = '@Html.Raw(Json.Serialize(Model))';
        </script>
    </text>
}
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Index";
}

<div class="row justify-content-center" style="margin-top:15px">
    <div class="col-8">
        <div class="card">
            <div class="card-header bg-dark text-light">
                Submission
            </div>
            <form class="submissionForm" asp-controller="Submission" asp-action="Submit" method="post" style="padding:15px">
                @if (User.Identity.IsAuthenticated && (await AuthorizationService.AuthorizeAsync(User, "Submitter Permission")).Succeeded)
                {
                    <div class="form-group">
                        <label asp-for="Title">Title</label>
                        <input type="text" class="form-control" placeholder="Bug Title.." asp-for="Title">
                    </div>
                }
                @if (User.Identity.IsAuthenticated && User.IsInRole("Manager"))
                {
                    <div class="form-group">
                        <label asp-for="ProjectAffected">Project</label>
                        <select class="form-control" asp-for="ProjectAffected" id="projectSlt">
                            @foreach (var project in Model.Options.ProjectOptions)
                            {
                                <option>@project</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Developer">Assign To</label>
                        <select class="form-control" asp-for="Developer" id="developerSlt"></select>
                    </div>
                }
                @if (User.Identity.IsAuthenticated && (await AuthorizationService.AuthorizeAsync(User, "Developer Permission")).Succeeded)
                {
                    <div class="form-group">
                        <label asp-for="Urgency">Urgency</label>
                        <select class="form-control" asp-for="Urgency">
                            @foreach (var urgency in Model.Options.UrgencyOptions)
                            {
                                <option>@urgency</option>
                            }

                        </select>
                    </div>
                }
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <div class="form-group">
                        <label asp-for="Team">Assign To Team</label>
                        <select class="form-control" asp-for="Team">
                            @foreach (var team in Model.Options.TeamOptions)
                            {
                                <option>@team</option>
                            }
                        </select>
                    </div>
                }

                @if (User.Identity.IsAuthenticated && (await AuthorizationService.AuthorizeAsync(User, "Submitter Permission")).Succeeded)
                {
                    <div class="form-group">
                        <label asp-for="Description">Description</label>
                        <textarea class="form-control" id="bugDescription" rows="3" asp-for="Description"></textarea>
                    </div>
                }
                <button type="submit" class="btn btn-info">Submit</button>
            </form>
        </div>
    </div>
</div>
<script>
    (function () {
        var selectProject = document.getElementById("projectSlt");
        var selectDeveloper = document.getElementById("developerSlt");
        selectProject.onchange = function () {
            var dataAsObj = JSON.parse(data);
            var developers = "";
            for (i = 0; i < dataAsObj.options.userProjectOptions.length; i++) {
                if (dataAsObj.options.userProjectOptions[i].project == selectProject.value) {
                    developers += "<option>" + dataAsObj.options.userProjectOptions[i].username + "</option>";
                }
            }
            selectDeveloper.innerHTML = developers;
        }
    })(document, window);
</script>
